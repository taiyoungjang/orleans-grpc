// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rank.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace game {

  /// <summary>Holder for reflection information generated from rank.proto</summary>
  public static partial class RankReflection {

    #region Descriptor
    /// <summary>File descriptor for rank.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RankReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpyYW5rLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3Rv",
            "GgplbnVtLnByb3RvGgp1dWlkLnByb3RvIpYBCghSYW5rRGF0YRIbCghyYW5r",
            "VHlwZRgBIAEoDjIJLlJhbmtUeXBlEgwKBHJhbmsYAiABKAMSDAoEbmFtZRgD",
            "IAEoCRINCgV2YWx1ZRgEIAEoAxISCgpwbGF5ZXJHdWlkGAUgASgJEi4KCnVw",
            "ZGF0ZURhdGUYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgeq",
            "AgRnYW1lYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::game.EnumReflection.Descriptor, global::game.UuidReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::game.RankData), global::game.RankData.Parser, new[]{ "RankType", "Rank", "Name", "Value", "PlayerGuid", "UpdateDate" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RankData : pb::IMessage<RankData> {
    private static readonly pb::MessageParser<RankData> _parser = new pb::MessageParser<RankData>(() => new RankData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RankData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.RankReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankData(RankData other) : this() {
      rankType_ = other.rankType_;
      rank_ = other.rank_;
      name_ = other.name_;
      value_ = other.value_;
      playerGuid_ = other.playerGuid_;
      updateDate_ = other.updateDate_ != null ? other.updateDate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankData Clone() {
      return new RankData(this);
    }

    /// <summary>Field number for the "rankType" field.</summary>
    public const int RankTypeFieldNumber = 1;
    private global::game.RankType rankType_ = global::game.RankType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::game.RankType RankType {
      get { return rankType_; }
      set {
        rankType_ = value;
      }
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 2;
    private long rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 4;
    private long value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "playerGuid" field.</summary>
    public const int PlayerGuidFieldNumber = 5;
    private string playerGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerGuid {
      get { return playerGuid_; }
      set {
        playerGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "updateDate" field.</summary>
    public const int UpdateDateFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateDate {
      get { return updateDate_; }
      set {
        updateDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RankData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RankData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RankType != other.RankType) return false;
      if (Rank != other.Rank) return false;
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      if (PlayerGuid != other.PlayerGuid) return false;
      if (!object.Equals(UpdateDate, other.UpdateDate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RankType != global::game.RankType.None) hash ^= RankType.GetHashCode();
      if (Rank != 0L) hash ^= Rank.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value != 0L) hash ^= Value.GetHashCode();
      if (PlayerGuid.Length != 0) hash ^= PlayerGuid.GetHashCode();
      if (updateDate_ != null) hash ^= UpdateDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RankType != global::game.RankType.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RankType);
      }
      if (Rank != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Rank);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Value != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Value);
      }
      if (PlayerGuid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PlayerGuid);
      }
      if (updateDate_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UpdateDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RankType != global::game.RankType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RankType);
      }
      if (Rank != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Rank);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
      }
      if (PlayerGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerGuid);
      }
      if (updateDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RankData other) {
      if (other == null) {
        return;
      }
      if (other.RankType != global::game.RankType.None) {
        RankType = other.RankType;
      }
      if (other.Rank != 0L) {
        Rank = other.Rank;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value != 0L) {
        Value = other.Value;
      }
      if (other.PlayerGuid.Length != 0) {
        PlayerGuid = other.PlayerGuid;
      }
      if (other.updateDate_ != null) {
        if (updateDate_ == null) {
          UpdateDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateDate.MergeFrom(other.UpdateDate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RankType = (global::game.RankType) input.ReadEnum();
            break;
          }
          case 16: {
            Rank = input.ReadInt64();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            Value = input.ReadInt64();
            break;
          }
          case 42: {
            PlayerGuid = input.ReadString();
            break;
          }
          case 50: {
            if (updateDate_ == null) {
              UpdateDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateDate);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
