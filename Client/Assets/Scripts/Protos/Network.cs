// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: network.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace game {

  /// <summary>Holder for reflection information generated from network.proto</summary>
  public static partial class NetworkReflection {

    #region Descriptor
    /// <summary>File descriptor for network.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NetworkReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1uZXR3b3JrLnByb3RvEg1wbGF5ZXJOZXR3b3JrGhtnb29nbGUvcHJvdG9i",
            "dWYvZW1wdHkucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJv",
            "dG8aCmVudW0ucHJvdG8aCnV1aWQucHJvdG8aDHBsYXllci5wcm90bxoKbWFp",
            "bC5wcm90bxoKcmFuay5wcm90byIhCgpSZWdpb25EYXRhEhMKC3JlZ2lvbklu",
            "ZGV4GAEgASgDInYKCFJhbmtzTWFwEjEKBXJhbmtzGAEgAygLMiIucGxheWVy",
            "TmV0d29yay5SYW5rc01hcC5SYW5rc0VudHJ5GjcKClJhbmtzRW50cnkSCwoD",
            "a2V5GAEgASgJEhgKBXZhbHVlGAIgASgLMgkuUmFua0RhdGE6AjgBIv8BChNU",
            "b3BSYW5rTGlzdFJlc3BvbnNlEh0KCWVycm9yQ29kZRgBIAEoDjIKLkVycm9y",
            "Q29kZRIuCgp1cGRhdGVEYXRlGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcBJCCgh0b3BSYW5rcxgDIAMoCzIwLnBsYXllck5ldHdvcmsuVG9w",
            "UmFua0xpc3RSZXNwb25zZS5Ub3BSYW5rc0VudHJ5EhkKBm15UmFuaxgEIAEo",
            "CzIJLlJhbmtEYXRhGjoKDVRvcFJhbmtzRW50cnkSCwoDa2V5GAEgASgJEhgK",
            "BXZhbHVlGAIgASgLMgkuUmFua0RhdGE6AjgBIh8KCENoYXRSb29tEhMKC3Jl",
            "Z2lvbkluZGV4GAEgASgDIjUKDlBsYXllckRhdGFMaXN0EiMKDnBsYXllckRh",
            "dGFMaXN0GAEgAygLMgsuUGxheWVyRGF0YSI2CghSb29tTGlzdBIqCgljaGF0",
            "Um9vbXMYASADKAsyFy5wbGF5ZXJOZXR3b3JrLkNoYXRSb29tIjUKC0F1dGhS",
            "ZXF1ZXN0EhIKCmZpcmViYXNlSWQYASABKAkSEgoDb3RwGAIgASgLMgUuVVVJ",
            "RCJBCgxBdXRoUmVzcG9uc2USEgoDb3RwGAEgASgLMgUuVVVJRBIdCgllcnJv",
            "ckNvZGUYAiABKA4yCi5FcnJvckNvZGUiIwoSVXBkYXRlU3RhZ2VSZXF1ZXN0",
            "Eg0KBXN0YWdlGAEgASgDIjQKE1VwZGF0ZVN0YWdlUmVzcG9uc2USHQoJZXJy",
            "b3JDb2RlGAEgASgOMgouRXJyb3JDb2RlIjgKE0NyZWF0ZVBsYXllclJlcXVl",
            "c3QSEwoLcmVnaW9uSW5kZXgYASABKAMSDAoEbmFtZRgCIAEoCSI1ChRDcmVh",
            "dGVQbGF5ZXJSZXNwb25zZRIdCgllcnJvckNvZGUYASABKA4yCi5FcnJvckNv",
            "ZGUiHgoLQ2hhdFJlcXVlc3QSDwoHbWVzc2FnZRgBIAEoCSItCgxDaGF0UmVz",
            "cG9uc2USHQoJZXJyb3JDb2RlGAEgASgOMgouRXJyb3JDb2RlIk4KD0dldE1h",
            "aWxSZXNwb25zZRIdCgllcnJvckNvZGUYASABKA4yCi5FcnJvckNvZGUSHAoF",
            "bWFpbHMYAiABKAsyDS5NYWlsTGlzdERhdGEiKAoRRGVsZXRlTWFpbFJlcXVl",
            "c3QSEwoEdXVpZBgBIAEoCzIFLlVVSUQiMwoSRGVsZXRlTWFpbFJlc3BvbnNl",
            "Eh0KCWVycm9yQ29kZRgBIAEoDjIKLkVycm9yQ29kZSKZAwoaU3RyZWFtU2Vy",
            "dmVyRXZlbnRzUmVzcG9uc2USQgoGb25DaGF0GAEgASgLMjAucGxheWVyTmV0",
            "d29yay5TdHJlYW1TZXJ2ZXJFdmVudHNSZXNwb25zZS5PbkNoYXRIABJGCghv",
            "bkNsb3NlZBgCIAEoCzIyLnBsYXllck5ldHdvcmsuU3RyZWFtU2VydmVyRXZl",
            "bnRzUmVzcG9uc2UuT25DbG9zZWRIABJUCg9vblVwZGF0ZVJhbmtpbmcYAyAB",
            "KAsyOS5wbGF5ZXJOZXR3b3JrLlN0cmVhbVNlcnZlckV2ZW50c1Jlc3BvbnNl",
            "Lk9uVXBkYXRlUmFua2luZ0gAGkMKBk9uQ2hhdBITCgtyZWdpb25JbmRleBgB",
            "IAEoAxITCgtvdGhlclBsYXllchgCIAEoCRIPCgdtZXNzYWdlGAMgASgJGhoK",
            "CE9uQ2xvc2VkEg4KBnJlYXNvbhgBIAEoCRouCg9PblVwZGF0ZVJhbmtpbmcS",
            "GwoIcmFua1R5cGUYASABKA4yCS5SYW5rVHlwZUIICgZhY3Rpb24ylQYKDVBs",
            "YXllck5ldHdvcmsSQgoHR2V0QXV0aBIaLnBsYXllck5ldHdvcmsuQXV0aFJl",
            "cXVlc3QaGy5wbGF5ZXJOZXR3b3JrLkF1dGhSZXNwb25zZRJQChdHZXRSZWdp",
            "b25QbGF5ZXJEYXRhTGlzdBIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRodLnBs",
            "YXllck5ldHdvcmsuUGxheWVyRGF0YUxpc3QSOQoPTG9naW5QbGF5ZXJEYXRh",
            "EhkucGxheWVyTmV0d29yay5SZWdpb25EYXRhGgsuUGxheWVyRGF0YRJXCgxD",
            "cmVhdGVQbGF5ZXISIi5wbGF5ZXJOZXR3b3JrLkNyZWF0ZVBsYXllclJlcXVl",
            "c3QaIy5wbGF5ZXJOZXR3b3JrLkNyZWF0ZVBsYXllclJlc3BvbnNlElQKC1Vw",
            "ZGF0ZVN0YWdlEiEucGxheWVyTmV0d29yay5VcGRhdGVTdGFnZVJlcXVlc3Qa",
            "Ii5wbGF5ZXJOZXR3b3JrLlVwZGF0ZVN0YWdlUmVzcG9uc2USXwoYU2VydmVy",
            "U3RyZWFtU2VydmVyRXZlbnRzEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Giku",
            "cGxheWVyTmV0d29yay5TdHJlYW1TZXJ2ZXJFdmVudHNSZXNwb25zZTABEj8K",
            "BENoYXQSGi5wbGF5ZXJOZXR3b3JrLkNoYXRSZXF1ZXN0GhsucGxheWVyTmV0",
            "d29yay5DaGF0UmVzcG9uc2USTAoOR2V0VG9wUmFua0xpc3QSFi5nb29nbGUu",
            "cHJvdG9idWYuRW1wdHkaIi5wbGF5ZXJOZXR3b3JrLlRvcFJhbmtMaXN0UmVz",
            "cG9uc2USQQoHR2V0TWFpbBIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoeLnBs",
            "YXllck5ldHdvcmsuR2V0TWFpbFJlc3BvbnNlElEKCkRlbGV0ZU1haWwSIC5w",
            "bGF5ZXJOZXR3b3JrLkRlbGV0ZU1haWxSZXF1ZXN0GiEucGxheWVyTmV0d29y",
            "ay5EZWxldGVNYWlsUmVzcG9uc2VCB6oCBGdhbWViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::game.EnumReflection.Descriptor, global::game.UuidReflection.Descriptor, global::game.PlayerReflection.Descriptor, global::game.MailReflection.Descriptor, global::game.RankReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::game.RegionData), global::game.RegionData.Parser, new[]{ "RegionIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.RanksMap), global::game.RanksMap.Parser, new[]{ "Ranks" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.TopRankListResponse), global::game.TopRankListResponse.Parser, new[]{ "ErrorCode", "UpdateDate", "TopRanks", "MyRank" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.ChatRoom), global::game.ChatRoom.Parser, new[]{ "RegionIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.PlayerDataList), global::game.PlayerDataList.Parser, new[]{ "PlayerDataList_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.RoomList), global::game.RoomList.Parser, new[]{ "ChatRooms" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.AuthRequest), global::game.AuthRequest.Parser, new[]{ "FirebaseId", "Otp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.AuthResponse), global::game.AuthResponse.Parser, new[]{ "Otp", "ErrorCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.UpdateStageRequest), global::game.UpdateStageRequest.Parser, new[]{ "Stage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.UpdateStageResponse), global::game.UpdateStageResponse.Parser, new[]{ "ErrorCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.CreatePlayerRequest), global::game.CreatePlayerRequest.Parser, new[]{ "RegionIndex", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.CreatePlayerResponse), global::game.CreatePlayerResponse.Parser, new[]{ "ErrorCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.ChatRequest), global::game.ChatRequest.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.ChatResponse), global::game.ChatResponse.Parser, new[]{ "ErrorCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.GetMailResponse), global::game.GetMailResponse.Parser, new[]{ "ErrorCode", "Mails" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.DeleteMailRequest), global::game.DeleteMailRequest.Parser, new[]{ "Uuid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.DeleteMailResponse), global::game.DeleteMailResponse.Parser, new[]{ "ErrorCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.StreamServerEventsResponse), global::game.StreamServerEventsResponse.Parser, new[]{ "OnChat", "OnClosed", "OnUpdateRanking" }, new[]{ "Action" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::game.StreamServerEventsResponse.Types.OnChat), global::game.StreamServerEventsResponse.Types.OnChat.Parser, new[]{ "RegionIndex", "OtherPlayer", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.StreamServerEventsResponse.Types.OnClosed), global::game.StreamServerEventsResponse.Types.OnClosed.Parser, new[]{ "Reason" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::game.StreamServerEventsResponse.Types.OnUpdateRanking), global::game.StreamServerEventsResponse.Types.OnUpdateRanking.Parser, new[]{ "RankType" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RegionData : pb::IMessage<RegionData> {
    private static readonly pb::MessageParser<RegionData> _parser = new pb::MessageParser<RegionData>(() => new RegionData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegionData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.NetworkReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegionData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegionData(RegionData other) : this() {
      regionIndex_ = other.regionIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegionData Clone() {
      return new RegionData(this);
    }

    /// <summary>Field number for the "regionIndex" field.</summary>
    public const int RegionIndexFieldNumber = 1;
    private long regionIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RegionIndex {
      get { return regionIndex_; }
      set {
        regionIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegionData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegionData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RegionIndex != other.RegionIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RegionIndex != 0L) hash ^= RegionIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RegionIndex != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RegionIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RegionIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RegionIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegionData other) {
      if (other == null) {
        return;
      }
      if (other.RegionIndex != 0L) {
        RegionIndex = other.RegionIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RegionIndex = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RanksMap : pb::IMessage<RanksMap> {
    private static readonly pb::MessageParser<RanksMap> _parser = new pb::MessageParser<RanksMap>(() => new RanksMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RanksMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.NetworkReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RanksMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RanksMap(RanksMap other) : this() {
      ranks_ = other.ranks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RanksMap Clone() {
      return new RanksMap(this);
    }

    /// <summary>Field number for the "ranks" field.</summary>
    public const int RanksFieldNumber = 1;
    private static readonly pbc::MapField<string, global::game.RankData>.Codec _map_ranks_codec
        = new pbc::MapField<string, global::game.RankData>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::game.RankData.Parser), 10);
    private readonly pbc::MapField<string, global::game.RankData> ranks_ = new pbc::MapField<string, global::game.RankData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::game.RankData> Ranks {
      get { return ranks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RanksMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RanksMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Ranks.Equals(other.Ranks)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Ranks.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ranks_.WriteTo(output, _map_ranks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ranks_.CalculateSize(_map_ranks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RanksMap other) {
      if (other == null) {
        return;
      }
      ranks_.Add(other.ranks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ranks_.AddEntriesFrom(input, _map_ranks_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TopRankListResponse : pb::IMessage<TopRankListResponse> {
    private static readonly pb::MessageParser<TopRankListResponse> _parser = new pb::MessageParser<TopRankListResponse>(() => new TopRankListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TopRankListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.NetworkReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopRankListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopRankListResponse(TopRankListResponse other) : this() {
      errorCode_ = other.errorCode_;
      updateDate_ = other.updateDate_ != null ? other.updateDate_.Clone() : null;
      topRanks_ = other.topRanks_.Clone();
      myRank_ = other.myRank_ != null ? other.myRank_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopRankListResponse Clone() {
      return new TopRankListResponse(this);
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private global::game.ErrorCode errorCode_ = global::game.ErrorCode.Success;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::game.ErrorCode ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "updateDate" field.</summary>
    public const int UpdateDateFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateDate {
      get { return updateDate_; }
      set {
        updateDate_ = value;
      }
    }

    /// <summary>Field number for the "topRanks" field.</summary>
    public const int TopRanksFieldNumber = 3;
    private static readonly pbc::MapField<string, global::game.RankData>.Codec _map_topRanks_codec
        = new pbc::MapField<string, global::game.RankData>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::game.RankData.Parser), 26);
    private readonly pbc::MapField<string, global::game.RankData> topRanks_ = new pbc::MapField<string, global::game.RankData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::game.RankData> TopRanks {
      get { return topRanks_; }
    }

    /// <summary>Field number for the "myRank" field.</summary>
    public const int MyRankFieldNumber = 4;
    private global::game.RankData myRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::game.RankData MyRank {
      get { return myRank_; }
      set {
        myRank_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TopRankListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TopRankListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (!object.Equals(UpdateDate, other.UpdateDate)) return false;
      if (!TopRanks.Equals(other.TopRanks)) return false;
      if (!object.Equals(MyRank, other.MyRank)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != global::game.ErrorCode.Success) hash ^= ErrorCode.GetHashCode();
      if (updateDate_ != null) hash ^= UpdateDate.GetHashCode();
      hash ^= TopRanks.GetHashCode();
      if (myRank_ != null) hash ^= MyRank.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode != global::game.ErrorCode.Success) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (updateDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateDate);
      }
      topRanks_.WriteTo(output, _map_topRanks_codec);
      if (myRank_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MyRank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != global::game.ErrorCode.Success) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (updateDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateDate);
      }
      size += topRanks_.CalculateSize(_map_topRanks_codec);
      if (myRank_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MyRank);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TopRankListResponse other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != global::game.ErrorCode.Success) {
        ErrorCode = other.ErrorCode;
      }
      if (other.updateDate_ != null) {
        if (updateDate_ == null) {
          UpdateDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateDate.MergeFrom(other.UpdateDate);
      }
      topRanks_.Add(other.topRanks_);
      if (other.myRank_ != null) {
        if (myRank_ == null) {
          MyRank = new global::game.RankData();
        }
        MyRank.MergeFrom(other.MyRank);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = (global::game.ErrorCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (updateDate_ == null) {
              UpdateDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateDate);
            break;
          }
          case 26: {
            topRanks_.AddEntriesFrom(input, _map_topRanks_codec);
            break;
          }
          case 34: {
            if (myRank_ == null) {
              MyRank = new global::game.RankData();
            }
            input.ReadMessage(MyRank);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatRoom : pb::IMessage<ChatRoom> {
    private static readonly pb::MessageParser<ChatRoom> _parser = new pb::MessageParser<ChatRoom>(() => new ChatRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.NetworkReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatRoom(ChatRoom other) : this() {
      regionIndex_ = other.regionIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatRoom Clone() {
      return new ChatRoom(this);
    }

    /// <summary>Field number for the "regionIndex" field.</summary>
    public const int RegionIndexFieldNumber = 1;
    private long regionIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RegionIndex {
      get { return regionIndex_; }
      set {
        regionIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RegionIndex != other.RegionIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RegionIndex != 0L) hash ^= RegionIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RegionIndex != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RegionIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RegionIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RegionIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatRoom other) {
      if (other == null) {
        return;
      }
      if (other.RegionIndex != 0L) {
        RegionIndex = other.RegionIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RegionIndex = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerDataList : pb::IMessage<PlayerDataList> {
    private static readonly pb::MessageParser<PlayerDataList> _parser = new pb::MessageParser<PlayerDataList>(() => new PlayerDataList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerDataList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.NetworkReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerDataList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerDataList(PlayerDataList other) : this() {
      playerDataList_ = other.playerDataList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerDataList Clone() {
      return new PlayerDataList(this);
    }

    /// <summary>Field number for the "playerDataList" field.</summary>
    public const int PlayerDataList_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::game.PlayerData> _repeated_playerDataList_codec
        = pb::FieldCodec.ForMessage(10, global::game.PlayerData.Parser);
    private readonly pbc::RepeatedField<global::game.PlayerData> playerDataList_ = new pbc::RepeatedField<global::game.PlayerData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::game.PlayerData> PlayerDataList_ {
      get { return playerDataList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerDataList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerDataList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playerDataList_.Equals(other.playerDataList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playerDataList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      playerDataList_.WriteTo(output, _repeated_playerDataList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += playerDataList_.CalculateSize(_repeated_playerDataList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerDataList other) {
      if (other == null) {
        return;
      }
      playerDataList_.Add(other.playerDataList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            playerDataList_.AddEntriesFrom(input, _repeated_playerDataList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomList : pb::IMessage<RoomList> {
    private static readonly pb::MessageParser<RoomList> _parser = new pb::MessageParser<RoomList>(() => new RoomList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.NetworkReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomList(RoomList other) : this() {
      chatRooms_ = other.chatRooms_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomList Clone() {
      return new RoomList(this);
    }

    /// <summary>Field number for the "chatRooms" field.</summary>
    public const int ChatRoomsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::game.ChatRoom> _repeated_chatRooms_codec
        = pb::FieldCodec.ForMessage(10, global::game.ChatRoom.Parser);
    private readonly pbc::RepeatedField<global::game.ChatRoom> chatRooms_ = new pbc::RepeatedField<global::game.ChatRoom>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::game.ChatRoom> ChatRooms {
      get { return chatRooms_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!chatRooms_.Equals(other.chatRooms_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= chatRooms_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      chatRooms_.WriteTo(output, _repeated_chatRooms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += chatRooms_.CalculateSize(_repeated_chatRooms_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomList other) {
      if (other == null) {
        return;
      }
      chatRooms_.Add(other.chatRooms_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            chatRooms_.AddEntriesFrom(input, _repeated_chatRooms_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AuthRequest : pb::IMessage<AuthRequest> {
    private static readonly pb::MessageParser<AuthRequest> _parser = new pb::MessageParser<AuthRequest>(() => new AuthRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.NetworkReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthRequest(AuthRequest other) : this() {
      firebaseId_ = other.firebaseId_;
      otp_ = other.otp_ != null ? other.otp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthRequest Clone() {
      return new AuthRequest(this);
    }

    /// <summary>Field number for the "firebaseId" field.</summary>
    public const int FirebaseIdFieldNumber = 1;
    private string firebaseId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirebaseId {
      get { return firebaseId_; }
      set {
        firebaseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "otp" field.</summary>
    public const int OtpFieldNumber = 2;
    private global::game.UUID otp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::game.UUID Otp {
      get { return otp_; }
      set {
        otp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FirebaseId != other.FirebaseId) return false;
      if (!object.Equals(Otp, other.Otp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FirebaseId.Length != 0) hash ^= FirebaseId.GetHashCode();
      if (otp_ != null) hash ^= Otp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FirebaseId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FirebaseId);
      }
      if (otp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Otp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FirebaseId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirebaseId);
      }
      if (otp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Otp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthRequest other) {
      if (other == null) {
        return;
      }
      if (other.FirebaseId.Length != 0) {
        FirebaseId = other.FirebaseId;
      }
      if (other.otp_ != null) {
        if (otp_ == null) {
          Otp = new global::game.UUID();
        }
        Otp.MergeFrom(other.Otp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FirebaseId = input.ReadString();
            break;
          }
          case 18: {
            if (otp_ == null) {
              Otp = new global::game.UUID();
            }
            input.ReadMessage(Otp);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AuthResponse : pb::IMessage<AuthResponse> {
    private static readonly pb::MessageParser<AuthResponse> _parser = new pb::MessageParser<AuthResponse>(() => new AuthResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.NetworkReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthResponse(AuthResponse other) : this() {
      otp_ = other.otp_ != null ? other.otp_.Clone() : null;
      errorCode_ = other.errorCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthResponse Clone() {
      return new AuthResponse(this);
    }

    /// <summary>Field number for the "otp" field.</summary>
    public const int OtpFieldNumber = 1;
    private global::game.UUID otp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::game.UUID Otp {
      get { return otp_; }
      set {
        otp_ = value;
      }
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 2;
    private global::game.ErrorCode errorCode_ = global::game.ErrorCode.Success;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::game.ErrorCode ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Otp, other.Otp)) return false;
      if (ErrorCode != other.ErrorCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (otp_ != null) hash ^= Otp.GetHashCode();
      if (ErrorCode != global::game.ErrorCode.Success) hash ^= ErrorCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (otp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Otp);
      }
      if (ErrorCode != global::game.ErrorCode.Success) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (otp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Otp);
      }
      if (ErrorCode != global::game.ErrorCode.Success) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthResponse other) {
      if (other == null) {
        return;
      }
      if (other.otp_ != null) {
        if (otp_ == null) {
          Otp = new global::game.UUID();
        }
        Otp.MergeFrom(other.Otp);
      }
      if (other.ErrorCode != global::game.ErrorCode.Success) {
        ErrorCode = other.ErrorCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (otp_ == null) {
              Otp = new global::game.UUID();
            }
            input.ReadMessage(Otp);
            break;
          }
          case 16: {
            ErrorCode = (global::game.ErrorCode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateStageRequest : pb::IMessage<UpdateStageRequest> {
    private static readonly pb::MessageParser<UpdateStageRequest> _parser = new pb::MessageParser<UpdateStageRequest>(() => new UpdateStageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateStageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.NetworkReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateStageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateStageRequest(UpdateStageRequest other) : this() {
      stage_ = other.stage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateStageRequest Clone() {
      return new UpdateStageRequest(this);
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 1;
    private long stage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Stage {
      get { return stage_; }
      set {
        stage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateStageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateStageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Stage != other.Stage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Stage != 0L) hash ^= Stage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Stage != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Stage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Stage != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Stage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateStageRequest other) {
      if (other == null) {
        return;
      }
      if (other.Stage != 0L) {
        Stage = other.Stage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Stage = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateStageResponse : pb::IMessage<UpdateStageResponse> {
    private static readonly pb::MessageParser<UpdateStageResponse> _parser = new pb::MessageParser<UpdateStageResponse>(() => new UpdateStageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateStageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.NetworkReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateStageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateStageResponse(UpdateStageResponse other) : this() {
      errorCode_ = other.errorCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateStageResponse Clone() {
      return new UpdateStageResponse(this);
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private global::game.ErrorCode errorCode_ = global::game.ErrorCode.Success;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::game.ErrorCode ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateStageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateStageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != global::game.ErrorCode.Success) hash ^= ErrorCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode != global::game.ErrorCode.Success) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != global::game.ErrorCode.Success) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateStageResponse other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != global::game.ErrorCode.Success) {
        ErrorCode = other.ErrorCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = (global::game.ErrorCode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreatePlayerRequest : pb::IMessage<CreatePlayerRequest> {
    private static readonly pb::MessageParser<CreatePlayerRequest> _parser = new pb::MessageParser<CreatePlayerRequest>(() => new CreatePlayerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreatePlayerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.NetworkReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerRequest(CreatePlayerRequest other) : this() {
      regionIndex_ = other.regionIndex_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerRequest Clone() {
      return new CreatePlayerRequest(this);
    }

    /// <summary>Field number for the "regionIndex" field.</summary>
    public const int RegionIndexFieldNumber = 1;
    private long regionIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RegionIndex {
      get { return regionIndex_; }
      set {
        regionIndex_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreatePlayerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreatePlayerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RegionIndex != other.RegionIndex) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RegionIndex != 0L) hash ^= RegionIndex.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RegionIndex != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RegionIndex);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RegionIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RegionIndex);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreatePlayerRequest other) {
      if (other == null) {
        return;
      }
      if (other.RegionIndex != 0L) {
        RegionIndex = other.RegionIndex;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RegionIndex = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreatePlayerResponse : pb::IMessage<CreatePlayerResponse> {
    private static readonly pb::MessageParser<CreatePlayerResponse> _parser = new pb::MessageParser<CreatePlayerResponse>(() => new CreatePlayerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreatePlayerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.NetworkReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerResponse(CreatePlayerResponse other) : this() {
      errorCode_ = other.errorCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerResponse Clone() {
      return new CreatePlayerResponse(this);
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private global::game.ErrorCode errorCode_ = global::game.ErrorCode.Success;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::game.ErrorCode ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreatePlayerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreatePlayerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != global::game.ErrorCode.Success) hash ^= ErrorCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode != global::game.ErrorCode.Success) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != global::game.ErrorCode.Success) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreatePlayerResponse other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != global::game.ErrorCode.Success) {
        ErrorCode = other.ErrorCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = (global::game.ErrorCode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatRequest : pb::IMessage<ChatRequest> {
    private static readonly pb::MessageParser<ChatRequest> _parser = new pb::MessageParser<ChatRequest>(() => new ChatRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.NetworkReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatRequest(ChatRequest other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatRequest Clone() {
      return new ChatRequest(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatRequest other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatResponse : pb::IMessage<ChatResponse> {
    private static readonly pb::MessageParser<ChatResponse> _parser = new pb::MessageParser<ChatResponse>(() => new ChatResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.NetworkReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatResponse(ChatResponse other) : this() {
      errorCode_ = other.errorCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatResponse Clone() {
      return new ChatResponse(this);
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private global::game.ErrorCode errorCode_ = global::game.ErrorCode.Success;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::game.ErrorCode ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != global::game.ErrorCode.Success) hash ^= ErrorCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode != global::game.ErrorCode.Success) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != global::game.ErrorCode.Success) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatResponse other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != global::game.ErrorCode.Success) {
        ErrorCode = other.ErrorCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = (global::game.ErrorCode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMailResponse : pb::IMessage<GetMailResponse> {
    private static readonly pb::MessageParser<GetMailResponse> _parser = new pb::MessageParser<GetMailResponse>(() => new GetMailResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMailResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.NetworkReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMailResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMailResponse(GetMailResponse other) : this() {
      errorCode_ = other.errorCode_;
      mails_ = other.mails_ != null ? other.mails_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMailResponse Clone() {
      return new GetMailResponse(this);
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private global::game.ErrorCode errorCode_ = global::game.ErrorCode.Success;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::game.ErrorCode ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "mails" field.</summary>
    public const int MailsFieldNumber = 2;
    private global::game.MailListData mails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::game.MailListData Mails {
      get { return mails_; }
      set {
        mails_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMailResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMailResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (!object.Equals(Mails, other.Mails)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != global::game.ErrorCode.Success) hash ^= ErrorCode.GetHashCode();
      if (mails_ != null) hash ^= Mails.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode != global::game.ErrorCode.Success) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (mails_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Mails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != global::game.ErrorCode.Success) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (mails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mails);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMailResponse other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != global::game.ErrorCode.Success) {
        ErrorCode = other.ErrorCode;
      }
      if (other.mails_ != null) {
        if (mails_ == null) {
          Mails = new global::game.MailListData();
        }
        Mails.MergeFrom(other.Mails);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = (global::game.ErrorCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (mails_ == null) {
              Mails = new global::game.MailListData();
            }
            input.ReadMessage(Mails);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteMailRequest : pb::IMessage<DeleteMailRequest> {
    private static readonly pb::MessageParser<DeleteMailRequest> _parser = new pb::MessageParser<DeleteMailRequest>(() => new DeleteMailRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteMailRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.NetworkReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMailRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMailRequest(DeleteMailRequest other) : this() {
      uuid_ = other.uuid_ != null ? other.uuid_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMailRequest Clone() {
      return new DeleteMailRequest(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private global::game.UUID uuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::game.UUID Uuid {
      get { return uuid_; }
      set {
        uuid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteMailRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteMailRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Uuid, other.Uuid)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (uuid_ != null) hash ^= Uuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (uuid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Uuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (uuid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Uuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteMailRequest other) {
      if (other == null) {
        return;
      }
      if (other.uuid_ != null) {
        if (uuid_ == null) {
          Uuid = new global::game.UUID();
        }
        Uuid.MergeFrom(other.Uuid);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (uuid_ == null) {
              Uuid = new global::game.UUID();
            }
            input.ReadMessage(Uuid);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteMailResponse : pb::IMessage<DeleteMailResponse> {
    private static readonly pb::MessageParser<DeleteMailResponse> _parser = new pb::MessageParser<DeleteMailResponse>(() => new DeleteMailResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteMailResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.NetworkReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMailResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMailResponse(DeleteMailResponse other) : this() {
      errorCode_ = other.errorCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMailResponse Clone() {
      return new DeleteMailResponse(this);
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private global::game.ErrorCode errorCode_ = global::game.ErrorCode.Success;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::game.ErrorCode ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteMailResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteMailResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != global::game.ErrorCode.Success) hash ^= ErrorCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode != global::game.ErrorCode.Success) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != global::game.ErrorCode.Success) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteMailResponse other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != global::game.ErrorCode.Success) {
        ErrorCode = other.ErrorCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = (global::game.ErrorCode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamServerEventsResponse : pb::IMessage<StreamServerEventsResponse> {
    private static readonly pb::MessageParser<StreamServerEventsResponse> _parser = new pb::MessageParser<StreamServerEventsResponse>(() => new StreamServerEventsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamServerEventsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::game.NetworkReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEventsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEventsResponse(StreamServerEventsResponse other) : this() {
      switch (other.ActionCase) {
        case ActionOneofCase.OnChat:
          OnChat = other.OnChat.Clone();
          break;
        case ActionOneofCase.OnClosed:
          OnClosed = other.OnClosed.Clone();
          break;
        case ActionOneofCase.OnUpdateRanking:
          OnUpdateRanking = other.OnUpdateRanking.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEventsResponse Clone() {
      return new StreamServerEventsResponse(this);
    }

    /// <summary>Field number for the "onChat" field.</summary>
    public const int OnChatFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::game.StreamServerEventsResponse.Types.OnChat OnChat {
      get { return actionCase_ == ActionOneofCase.OnChat ? (global::game.StreamServerEventsResponse.Types.OnChat) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.OnChat;
      }
    }

    /// <summary>Field number for the "onClosed" field.</summary>
    public const int OnClosedFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::game.StreamServerEventsResponse.Types.OnClosed OnClosed {
      get { return actionCase_ == ActionOneofCase.OnClosed ? (global::game.StreamServerEventsResponse.Types.OnClosed) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.OnClosed;
      }
    }

    /// <summary>Field number for the "onUpdateRanking" field.</summary>
    public const int OnUpdateRankingFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::game.StreamServerEventsResponse.Types.OnUpdateRanking OnUpdateRanking {
      get { return actionCase_ == ActionOneofCase.OnUpdateRanking ? (global::game.StreamServerEventsResponse.Types.OnUpdateRanking) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.OnUpdateRanking;
      }
    }

    private object action_;
    /// <summary>Enum of possible cases for the "action" oneof.</summary>
    public enum ActionOneofCase {
      None = 0,
      OnChat = 1,
      OnClosed = 2,
      OnUpdateRanking = 3,
    }
    private ActionOneofCase actionCase_ = ActionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionOneofCase ActionCase {
      get { return actionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAction() {
      actionCase_ = ActionOneofCase.None;
      action_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamServerEventsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamServerEventsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OnChat, other.OnChat)) return false;
      if (!object.Equals(OnClosed, other.OnClosed)) return false;
      if (!object.Equals(OnUpdateRanking, other.OnUpdateRanking)) return false;
      if (ActionCase != other.ActionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (actionCase_ == ActionOneofCase.OnChat) hash ^= OnChat.GetHashCode();
      if (actionCase_ == ActionOneofCase.OnClosed) hash ^= OnClosed.GetHashCode();
      if (actionCase_ == ActionOneofCase.OnUpdateRanking) hash ^= OnUpdateRanking.GetHashCode();
      hash ^= (int) actionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (actionCase_ == ActionOneofCase.OnChat) {
        output.WriteRawTag(10);
        output.WriteMessage(OnChat);
      }
      if (actionCase_ == ActionOneofCase.OnClosed) {
        output.WriteRawTag(18);
        output.WriteMessage(OnClosed);
      }
      if (actionCase_ == ActionOneofCase.OnUpdateRanking) {
        output.WriteRawTag(26);
        output.WriteMessage(OnUpdateRanking);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (actionCase_ == ActionOneofCase.OnChat) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OnChat);
      }
      if (actionCase_ == ActionOneofCase.OnClosed) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OnClosed);
      }
      if (actionCase_ == ActionOneofCase.OnUpdateRanking) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OnUpdateRanking);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamServerEventsResponse other) {
      if (other == null) {
        return;
      }
      switch (other.ActionCase) {
        case ActionOneofCase.OnChat:
          if (OnChat == null) {
            OnChat = new global::game.StreamServerEventsResponse.Types.OnChat();
          }
          OnChat.MergeFrom(other.OnChat);
          break;
        case ActionOneofCase.OnClosed:
          if (OnClosed == null) {
            OnClosed = new global::game.StreamServerEventsResponse.Types.OnClosed();
          }
          OnClosed.MergeFrom(other.OnClosed);
          break;
        case ActionOneofCase.OnUpdateRanking:
          if (OnUpdateRanking == null) {
            OnUpdateRanking = new global::game.StreamServerEventsResponse.Types.OnUpdateRanking();
          }
          OnUpdateRanking.MergeFrom(other.OnUpdateRanking);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::game.StreamServerEventsResponse.Types.OnChat subBuilder = new global::game.StreamServerEventsResponse.Types.OnChat();
            if (actionCase_ == ActionOneofCase.OnChat) {
              subBuilder.MergeFrom(OnChat);
            }
            input.ReadMessage(subBuilder);
            OnChat = subBuilder;
            break;
          }
          case 18: {
            global::game.StreamServerEventsResponse.Types.OnClosed subBuilder = new global::game.StreamServerEventsResponse.Types.OnClosed();
            if (actionCase_ == ActionOneofCase.OnClosed) {
              subBuilder.MergeFrom(OnClosed);
            }
            input.ReadMessage(subBuilder);
            OnClosed = subBuilder;
            break;
          }
          case 26: {
            global::game.StreamServerEventsResponse.Types.OnUpdateRanking subBuilder = new global::game.StreamServerEventsResponse.Types.OnUpdateRanking();
            if (actionCase_ == ActionOneofCase.OnUpdateRanking) {
              subBuilder.MergeFrom(OnUpdateRanking);
            }
            input.ReadMessage(subBuilder);
            OnUpdateRanking = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the StreamServerEventsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class OnChat : pb::IMessage<OnChat> {
        private static readonly pb::MessageParser<OnChat> _parser = new pb::MessageParser<OnChat>(() => new OnChat());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<OnChat> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::game.StreamServerEventsResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OnChat() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OnChat(OnChat other) : this() {
          regionIndex_ = other.regionIndex_;
          otherPlayer_ = other.otherPlayer_;
          message_ = other.message_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OnChat Clone() {
          return new OnChat(this);
        }

        /// <summary>Field number for the "regionIndex" field.</summary>
        public const int RegionIndexFieldNumber = 1;
        private long regionIndex_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long RegionIndex {
          get { return regionIndex_; }
          set {
            regionIndex_ = value;
          }
        }

        /// <summary>Field number for the "otherPlayer" field.</summary>
        public const int OtherPlayerFieldNumber = 2;
        private string otherPlayer_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OtherPlayer {
          get { return otherPlayer_; }
          set {
            otherPlayer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 3;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as OnChat);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(OnChat other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RegionIndex != other.RegionIndex) return false;
          if (OtherPlayer != other.OtherPlayer) return false;
          if (Message != other.Message) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (RegionIndex != 0L) hash ^= RegionIndex.GetHashCode();
          if (OtherPlayer.Length != 0) hash ^= OtherPlayer.GetHashCode();
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (RegionIndex != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(RegionIndex);
          }
          if (OtherPlayer.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(OtherPlayer);
          }
          if (Message.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (RegionIndex != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(RegionIndex);
          }
          if (OtherPlayer.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OtherPlayer);
          }
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(OnChat other) {
          if (other == null) {
            return;
          }
          if (other.RegionIndex != 0L) {
            RegionIndex = other.RegionIndex;
          }
          if (other.OtherPlayer.Length != 0) {
            OtherPlayer = other.OtherPlayer;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                RegionIndex = input.ReadInt64();
                break;
              }
              case 18: {
                OtherPlayer = input.ReadString();
                break;
              }
              case 26: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class OnClosed : pb::IMessage<OnClosed> {
        private static readonly pb::MessageParser<OnClosed> _parser = new pb::MessageParser<OnClosed>(() => new OnClosed());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<OnClosed> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::game.StreamServerEventsResponse.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OnClosed() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OnClosed(OnClosed other) : this() {
          reason_ = other.reason_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OnClosed Clone() {
          return new OnClosed(this);
        }

        /// <summary>Field number for the "reason" field.</summary>
        public const int ReasonFieldNumber = 1;
        private string reason_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Reason {
          get { return reason_; }
          set {
            reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as OnClosed);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(OnClosed other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Reason != other.Reason) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Reason.Length != 0) hash ^= Reason.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Reason.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Reason);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Reason.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(OnClosed other) {
          if (other == null) {
            return;
          }
          if (other.Reason.Length != 0) {
            Reason = other.Reason;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Reason = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class OnUpdateRanking : pb::IMessage<OnUpdateRanking> {
        private static readonly pb::MessageParser<OnUpdateRanking> _parser = new pb::MessageParser<OnUpdateRanking>(() => new OnUpdateRanking());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<OnUpdateRanking> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::game.StreamServerEventsResponse.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OnUpdateRanking() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OnUpdateRanking(OnUpdateRanking other) : this() {
          rankType_ = other.rankType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OnUpdateRanking Clone() {
          return new OnUpdateRanking(this);
        }

        /// <summary>Field number for the "rankType" field.</summary>
        public const int RankTypeFieldNumber = 1;
        private global::game.RankType rankType_ = global::game.RankType.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::game.RankType RankType {
          get { return rankType_; }
          set {
            rankType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as OnUpdateRanking);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(OnUpdateRanking other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RankType != other.RankType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (RankType != global::game.RankType.None) hash ^= RankType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (RankType != global::game.RankType.None) {
            output.WriteRawTag(8);
            output.WriteEnum((int) RankType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (RankType != global::game.RankType.None) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RankType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(OnUpdateRanking other) {
          if (other == null) {
            return;
          }
          if (other.RankType != global::game.RankType.None) {
            RankType = other.RankType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                RankType = (global::game.RankType) input.ReadEnum();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
