
syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "enum.proto";
import "uuid.proto";
import "player.proto";
import "mail.proto";
import "rank.proto";

option csharp_namespace = "game";

package playerNetwork;

service PlayerNetwork {
  rpc GetAuth(AuthRequest) returns (AuthResponse);
  rpc GetRegionPlayerDataList(google.protobuf.Empty) returns (PlayerDataList);
  rpc LoginPlayerData(RegionData) returns (PlayerData);
  rpc CreatePlayer(CreatePlayerRequest) returns (CreatePlayerResponse);
  rpc UpdateStage(UpdateStageRequest) returns(UpdateStageResponse);
  rpc ServerStreamServerEvents (google.protobuf.Empty) returns (stream StreamServerEventsResponse);
  rpc Chat(ChatRequest) returns (ChatResponse);
  rpc GetTopRankList(google.protobuf.Empty) returns (TopRankListResponse);
  rpc GetMail(google.protobuf.Empty) returns (GetMailResponse);
  rpc DeleteMail(DeleteMailRequest) returns (DeleteMailResponse);
}

message RegionData{
    int64 regionIndex = 1;
}


message RanksMap{
    map<string,RankData> ranks = 1;
}

message TopRankListResponse{
    ErrorCode errorCode = 1;
    google.protobuf.Timestamp updateDate = 2;
    map<string,RankData> topRanks = 3;
    RankData myRank = 4;
}

message ChatRoom{
  int64 regionIndex = 1;
}

message PlayerDataList{
  repeated PlayerData playerDataList = 1;
}

message RoomList{
  repeated ChatRoom chatRooms = 1;
}

message AuthRequest{
  string firebaseId = 1;
  UUID otp = 2;
}
message AuthResponse{
  UUID otp = 1;
  ErrorCode errorCode = 2;
}

message UpdateStageRequest{
  int64 stage = 1;
}

message UpdateStageResponse{
  ErrorCode errorCode = 1;
}

message CreatePlayerRequest{
  int64 regionIndex= 1;
  string name = 2;
}
message CreatePlayerResponse{
  ErrorCode errorCode = 1;
}


message ChatRequest{
  string message = 1;
}
message ChatResponse{
  ErrorCode errorCode = 1;
}

message GetMailResponse {
  ErrorCode errorCode = 1;
  MailListData mails = 2;
}

message DeleteMailRequest {
  UUID uuid = 1;
}

message DeleteMailResponse {
  ErrorCode errorCode = 1;
}

message StreamServerEventsResponse {
  message OnChat{
    int64 regionIndex = 1;
    string otherPlayer = 2;
    string message = 3;
  }
  message OnClosed{
    string reason = 1;
  }
  message OnUpdateRanking{
    RankType rankType = 1;
  }
  oneof action {
    OnChat onChat = 1;
    OnClosed onClosed = 2;
    OnUpdateRanking onUpdateRanking = 3;
  }
}

